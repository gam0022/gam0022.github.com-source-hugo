<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gam0022.net</title>
    <link>https://gam0022.net/tags/serversmanvps/index.xml</link>
    <description>Recent content on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2016 gam0022</copyright>
    <atom:link href="/tags/serversmanvps/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ServersMan@VPSからConoHaに引っ越しました</title>
      <link>https://gam0022.net/blog/2017/11/14/move-from-serversman-to-conoha/</link>
      <pubDate>Tue, 14 Nov 2017 01:00:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2017/11/14/move-from-serversman-to-conoha/</guid>
      <description>&lt;p&gt;当サイト（&lt;a href=&#34;https://gam0022.net/&#34;&gt;gam0022.net&lt;/a&gt;）を動かしているサーバを&lt;a href=&#34;http://dream.jp/vps/&#34;&gt;ServersMan@VPS&lt;/a&gt;から&lt;a href=&#34;https://www.conoha.jp/&#34;&gt;ConoHa&lt;/a&gt;に乗り換えました。&lt;/p&gt;

&lt;p&gt;2011/12にServersMan@VPSを契約したので、なんと6年間もお世話になりました。&lt;/p&gt;

&lt;p&gt;ServersManさん長い間ありがとうございました。ConoHaちゃんよろしくお願いします。&lt;/p&gt;

&lt;h1 id=&#34;引っ越した理由&#34;&gt;引っ越した理由&lt;/h1&gt;

&lt;p&gt;結論から言うと、ServersMan@VPSで設定されているTCPのバッファサイズ制限が厳しすぎて、ブログ用のサーバとしての利用が困難になってきたからです。&lt;/p&gt;

&lt;p&gt;去年頃から記事へのアクセスが増えると、アクセスが非常に遅くなったり、サーバが強制停止してsshすらできない状況が頻発していました。
特にサーバが停止されると管理画面からサーバを再起動するしかなくなり、非常に困っていました。&lt;/p&gt;

&lt;p&gt;ServersMan@VPSではOpenVZというサーバ仮想化ソフトが使われています。
OpneVZのリソース情報は &lt;code&gt;/proc/user_beancounters&lt;/code&gt; から確認できます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat /proc/user_beancounters
Version: 2.5
       uid  resource                     held              maxheld              barrier                limit              failcnt
    43120:  kmemsize                 51483085             54714368  9223372036854775807  9223372036854775807                    0
            lockedpages                     0                    0                  256                  256                    0
            privvmpages                156446               413948  9223372036854775807  9223372036854775807                    0
            shmpages                    17174                18182  9223372036854775807  9223372036854775807                    0
            dummy                           0                    0  9223372036854775807  9223372036854775807                    0
            numproc                        60                  132                  480                  480                    0
            physpages                  263585               274847                    0               524288                    0
            vmguarpages                     0                    0  9223372036854775807  9223372036854775807                    0
            oomguarpages                15701                24817                26112  9223372036854775807                    0
            numtcpsock                     17                  161                  360                  360                    0
            numflock                       30                   73                  188                  206                    0
            numpty                          3                   12                   12                   12                    2
            numsiginfo                      0                   30                  192                  192                    0
            tcpsndbuf                  222624              1737856              1720320              2703360            127242887
            tcprcvbuf                  212992              1211696              1720320              2703360                    0
            othersockbuf               228888               768328              1126080              2097152                    0
            dgramrcvbuf                     0                19320               262144               262144                    0
            numothersock                  129                  360                  360                  360                   68
            dcachesize               44554051             45815590  9223372036854775807  9223372036854775807                    0
            numfile                      1098                 2485                 9312                 9312                    0
            dummy                           0                    0  9223372036854775807  9223372036854775807                    0
            dummy                           0                    0  9223372036854775807  9223372036854775807                    0
            dummy                           0                    0  9223372036854775807  9223372036854775807                    0
            numiptent                      24                   24                  256                  256                    0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tcpsndbufのfailcntが127242887となっており、TCPの送信バッファのサイズ制限に引っかかっていました。
tcpsndbufのlimitは2703360byte = 約2MBで、通常の使用範囲でもすぐに制限に引っかかるような設定でした。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;resource                     held              maxheld              barrier                limit              failcnt
tcpsndbuf                  222624              1737856              1720320              2703360            127242887
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自分の以外にも&lt;a href=&#34;http://causeless.hatenablog.jp/entry/2015/06/21/205731&#34;&gt;同様のトラブルに悩んでいる人&lt;/a&gt;を発見し、乗り換えることを決意しました。&lt;/p&gt;

&lt;h1 id=&#34;引っ越し手順&#34;&gt;引っ越し手順&lt;/h1&gt;

&lt;h2 id=&#34;ブログの引っ越し&#34;&gt;ブログの引っ越し&lt;/h2&gt;

&lt;p&gt;ブログの引っ越しは特にトラブルもなく完了しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DTIからお名前.comにドメインの移管

&lt;ul&gt;
&lt;li&gt;ドメインの移管はかなり前（今年の3月）に行いました&lt;/li&gt;
&lt;li&gt;DTIのサービス(UbicName)でドメインを取得しましたが、AレコードにDTIで契約中のサーバのIPアドレスしか選択できないありえない仕様でした…💢&lt;/li&gt;
&lt;li&gt;当然ながら、お名前.comでは自由にAレコードを設定できます&lt;/li&gt;
&lt;li&gt;お名前.comへのドメインを移管は、DTIの管理画面から申請できました&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/gam0022/status/837548594320179200&#34;&gt;申請から24時間くらいで移管が完了&lt;/a&gt;し、お名前.comのアカウントを発行してもらえました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;新サーバ(ConoHa)の契約

&lt;ul&gt;
&lt;li&gt;月額900円のメモリ1GBのプランを選択しました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Webサーバの設定

&lt;ul&gt;
&lt;li&gt;旧サーバ(ServersMan)では初期インストールのapacheをそのまま使っていました&lt;/li&gt;
&lt;li&gt;新サーバでは学習目的でnginxをインストールして設定しました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;新サーバにコンテンツをデプロイ

&lt;ul&gt;
&lt;li&gt;静的CMSのHugoでサイト構築しているので、静的ファイルをrsyncでアップロードするだけでした&lt;/li&gt;
&lt;li&gt;全く苦労なくできました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ドメインのAレコードの変更

&lt;ul&gt;
&lt;li&gt;旧サーバから新サーバにドメインの割当を変更しました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;その他の引っ越し&#34;&gt;その他の引っ越し&lt;/h2&gt;

&lt;p&gt;ブログの他にも、過去に作った&lt;a href=&#34;https://gam0022.net/app/tmg/&#34;&gt;Ruby製のWebアプリ&lt;/a&gt;や&lt;a href=&#34;https://twitter.com/daigoroubot&#34;&gt;Ruby製のTwitterのBot&lt;/a&gt;なども引っ越しました。&lt;/p&gt;

&lt;p&gt;新サーバで旧サーバ（6年前）の環境を再現しようとしたものの、旧サーバのRubyのバージョンが古すぎてセキュリティ的に危険なのに加えて、C拡張のgemのビルドが失敗したりして、断念しました。&lt;/p&gt;

&lt;p&gt;最終的にはRubyと依存gemのバージョンを最新版に上げて、コードも修正をして、なんとか新サーバで動かせるようにしました。
またnginxでCGIを使うには&lt;a href=&#34;https://qiita.com/gam0022/items/d16cc83a32c5c2efdefc&#34;&gt;FCGI Wrapの設定&lt;/a&gt;が必要でした。&lt;/p&gt;

&lt;p&gt;ついでにGemfileを書いて、依存gemを管理するようにしました。&lt;/p&gt;

&lt;h1 id=&#34;まとめ-自戒&#34;&gt;まとめ（自戒）&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;サーバ選びでは、値段やスペックだけではなく、TCPのバッファ制限なども注意しましょう&lt;/li&gt;
&lt;li&gt;好きなタイミングでサーバを乗り換えできるように、ドメインは最初からお名前.comで取得しておきましょう

&lt;ul&gt;
&lt;li&gt;6年前の自分にはその知識がありませんでした&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;静的CMSは引っ越しが簡単なのでオススメです&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ServersMan@VPSでRubyのCGIを実行するまでのメモ</title>
      <link>https://gam0022.net/blog/2012/07/26/run-ruby-cgi-on-serversman-at-vps/</link>
      <pubDate>Thu, 26 Jul 2012 00:11:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2012/07/26/run-ruby-cgi-on-serversman-at-vps/</guid>
      <description>

&lt;p&gt;ServersMan@VPS(Ubuntu)でRubyのCGIを実行するまでのメモです。&lt;/p&gt;

&lt;h2 id=&#34;apache2をインストールする&#34;&gt;apache2をインストールする&lt;/h2&gt;

&lt;p&gt;apt-getかaptitudeでインストールすればいいと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo aptitude install apache2	
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;addhandlerを設定する&#34;&gt;AddHandlerを設定する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/apache2/mods-enabled/mime.conf&lt;/code&gt;にAddHandlerを設定します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#AddHandler cgi-script .cgi&lt;/code&gt;という行があるので、
見つけてコメントアウトを解除して、次のように書き換えればいいと思います。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AddHandler cgi-script .cgi .rb
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;options-execcgiを設定する&#34;&gt;Options +ExecCGIを設定する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/etc/apache2/sites-available/default&lt;/code&gt;でOptions +ExecCGIを設定します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Directory /var/www/html/&amp;gt;
	#Options Indexes FollowSymLinks MultiViews 
	Options Indexes FollowSymLinks MultiViews ExecCGI
	AllowOverride None
	Order allow,deny
	allow from all
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;apache2を再起動する&#34;&gt;apache2を再起動する&lt;/h2&gt;

&lt;p&gt;上の2つのファイルを編集したら、apacheを再起動して設定を反映させます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo /etc/init.d/apache2 restart	
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ruby-cgiのパーミッションを755にする&#34;&gt;Ruby CGIのパーミッションを755にする&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /var/www/html
chmod 755 test.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでたぶん動くようになります。&lt;/p&gt;

&lt;p&gt;ね？簡単でしょ？&lt;/p&gt;

&lt;h2 id=&#34;うまくいかないときは&#34;&gt;うまくいかないときは&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;/var/log/apache2/error.log&lt;/code&gt;のエラーメッセージを見ましょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rsyncを使ってOctopressをVPS上で公開する</title>
      <link>https://gam0022.net/blog/2012/07/23/run-octopress-on-a-vps-using-rsync/</link>
      <pubDate>Mon, 23 Jul 2012 10:02:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2012/07/23/run-octopress-on-a-vps-using-rsync/</guid>
      <description>

&lt;p&gt;今回もOctopressに関する記事です。&lt;/p&gt;

&lt;p&gt;先日、Octopressを使ってGithubPages上にブログを運営しましたが、
気が変わってレンタルしているVPS上で運営したくなりました。&lt;/p&gt;

&lt;p&gt;Octopressでは&lt;code&gt;rake deploy&lt;/code&gt;を叩くだけでRsyncを使い自分のサーバ上にコンテンツを同期することができるので、
その方法を紹介したいと思います。&lt;/p&gt;

&lt;p&gt;Rsyncを使って同期するためには次の2つの作業をする必要があります。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;公開鍵認証を使ってsshでログインできるようにする。&lt;/li&gt;
&lt;li&gt;サーバ側の&lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;にローカル側の公開鍵を登録する。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ここでは、serverという名前のサーバに作成済みのuserというユーザを使って、公開鍵でログインするようにするまでの手順を紹介します。&lt;/p&gt;

&lt;h1 id=&#34;ローカル側の設定-鍵のペアの生成&#34;&gt;ローカル側の設定(鍵のペアの生成)&lt;/h1&gt;

&lt;p&gt;まず、ローカル側で鍵のペアの生成します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/.ssh
ssh-keygen -t rsa # RSAの鍵のペアを生成する。save the keyは空白でOK。パスフレーズは任意のものを指定する。
cat id_rsa.pub # 公開鍵はサーバのauthorized_keysに後で登録するので表示しておく
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;サーバ側の設定&#34;&gt;サーバ側の設定&lt;/h1&gt;

&lt;h2 id=&#34;公開鍵の登録&#34;&gt;公開鍵の登録&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vim ~/.ssh/authorized_keys # 上で表示したローカル側のid_rsa.pubを最後の行に追加する。(ファイルがなければ作る)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sshの設定&#34;&gt;sshの設定&lt;/h2&gt;

&lt;p&gt;vimなどで、サーバ側の&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;を編集します。
間違った設定をすると最悪sshでログインできなるので注意しましょうw&lt;/p&gt;

&lt;p&gt;私の場合はこのような感じに&lt;strong&gt;一部を書き換えました。&lt;/strong&gt;
この記事を書いている私ですが、サーバの設定は初心者なので、あまり信用しないようにしましょうw
あくまで参考程度で。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AllowUsers user
RSAAuthentication yes 
PubkeyAuthentication yes 
AuthorizedKeysFile   %h/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;VPS上の設定が終わったら、sshdを再起動します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;再びローカル側の設定-sshのテスト&#34;&gt;再びローカル側の設定(sshのテスト)&lt;/h1&gt;

&lt;p&gt;以上で公開鍵を使ってsshをする準備が整ったので、テストしてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/.ssh
chmod 600 id_rsa # パーミションが600でないと「WARNING: UNPROTECTED PRIVATE KEY FILE!」というエラーになる。
ssh -i id_rsa user@server #これでログインできれば成功。-iで秘密鍵を指定できる。
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;octopressの設定&#34;&gt;Octopressの設定&lt;/h1&gt;

&lt;p&gt;ここまで来れば、あとはOctopressの設定だけです。&lt;code&gt;Rakefile&lt;/code&gt;を編集します。&lt;/p&gt;

&lt;p&gt;私の場合、GithubPages用にRakeFileを設定してしまったので、書き直します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;## -- Rsync Deploy config -- ##
# Be sure your public key is listed in your server&#39;s ~/.ssh/authorized_keys file
ssh_user       = &amp;quot;user@server&amp;quot;
ssh_port       = &amp;quot;1234&amp;quot; #普通は22ですが、セキュリティ上の理由で(
document_root  = &amp;quot;/var/www/html/&amp;quot; #htmlの公開用のディレクトリを指定。ServersMan@VPSならこの設定でいいはず。
rsync_delete   = true
#deploy_default = &amp;quot;push&amp;quot;
deploy_default = &amp;quot;rsync&amp;quot; #rsyncで同期します。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで設定は終わりです。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rake deploy&lt;/code&gt;でファイルが同期できたら成功です。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;参考記事
:&lt;a href=&#34;http://octopress.org/docs/deploying/rsync/&#34;&gt;Deploying With Rsync&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
