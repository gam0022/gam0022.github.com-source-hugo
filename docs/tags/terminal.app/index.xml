<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gam0022.net</title>
    <link>https://gam0022.net/tags/terminal.app/index.xml</link>
    <description>Recent content on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2016 gam0022</copyright>
    <atom:link href="/tags/terminal.app/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Linux(Ubuntu)からOS Xへ開発環境を移すときにしたこと</title>
      <link>https://gam0022.net/blog/2012/07/28/customize-terminap-dot-app-and-vim-on-lion-mac/</link>
      <pubDate>Sat, 28 Jul 2012 00:01:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2012/07/28/customize-terminap-dot-app-and-vim-on-lion-mac/</guid>
      <description>

&lt;p&gt;とりあえず次のような感じになりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ターミナル
:Terminal.app&lt;/li&gt;
&lt;li&gt;エディタ
:vim&lt;/li&gt;
&lt;li&gt;パッケージ管理システム
:homebrew&lt;/li&gt;
&lt;li&gt;バージョン管理システム
:git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mac初心者が躓かないように、この順番で作業すればうまくいくという順番で紹介していきます。&lt;/p&gt;

&lt;h2 id=&#34;terminal-app&#34;&gt;Terminal.app&lt;/h2&gt;

&lt;p&gt;Terminal.appはMacOSに標準で入っている端末です。&lt;/p&gt;

&lt;p&gt;最終的にはこんな感じになりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2012.7.28_terminal.png&#34; alt=&#34;Terminal.app&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;外観を変える&#34;&gt;外観を変える&lt;/h3&gt;

&lt;p&gt;外観を変えるために、&lt;code&gt;環境設定 &amp;gt; 設定&lt;/code&gt;でProという設定を使うことにしました。&lt;/p&gt;

&lt;p&gt;フォントを&lt;code&gt;Monaco 13pt.&lt;/code&gt;にして、&lt;code&gt;テキストをアンチエイリアス処理&lt;/code&gt;を有効にしました。&lt;/p&gt;

&lt;h3 id=&#34;bash-95-profile-を設定する&#34;&gt;.bash&amp;#95;profile を設定する&lt;/h3&gt;

&lt;p&gt;これまでの常識では、&lt;code&gt;~/.bashrc&lt;/code&gt;に書いた設定が端末の起動時に読み込まれるものと思っていたのですが、
macの場合は&lt;code&gt;~/.bashrc&lt;/code&gt;は無効になっており、ログイン時だけ&lt;code&gt;~/.bash_profile&lt;/code&gt;が読み込まれるようです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;要するにMacのTerminalの設定は&lt;code&gt;~/.bash_profile&lt;/code&gt;に書けばいいということです。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;設定の反映が必要であれば&lt;code&gt;$ source ~/.bash_profile&lt;/code&gt;を実行すればいいことなので、
ログイン時でも端末起動時でもそれほど影響はないです。&lt;/p&gt;

&lt;p&gt;前の環境の&lt;code&gt;.bashrc&lt;/code&gt;は禍々しくて見せられませんが、&lt;code&gt;.bash_profile&lt;/code&gt;をこんな感じで書いていきます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# パスの設定とか
export PATH=$PATH:$HOME/bin

# 便利なエイリアスとか
alias ll=&#39;ls -alF&#39;
alias l=&#39;ls&#39;
alias emacs=&#39;vim&#39;

# lsに色を付ける =&amp;gt; http://jmblog.jp/archives/307
export CLICOLOR=1
export LSCOLORS=DxGxcxdxCxegedabagacad

# プロンプトも色を付ける
PS1=&#39;\[\033[36m\][\u@\h:\[\033[33m\]\w\[\033[36m\]]\[\033[0m\] \$ &#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;exitでタブやウィンドウを閉じるようにする&#34;&gt;exitでタブやウィンドウを閉じるようにする&lt;/h3&gt;

&lt;p&gt;なぜかデフォルトでは&lt;code&gt;exit&lt;/code&gt;しても画面が残ってしまうので、設定を変えます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/Library/Preferences/com.apple.Terminal.plist&lt;/code&gt;の&lt;code&gt;Root &amp;gt; Window Settings &amp;gt; (任意のテーマ) &amp;gt; shellExitAction&lt;/code&gt;の値を&lt;code&gt;1&lt;/code&gt;(Number)に変更します。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://havelog.ayumusato.com/develop/others/e180-mac-terminal-exit2close.html&#34;&gt;Mac OSXでTerminalをexitしたら閉じるようにする方法&lt;/a&gt;を参考しました。&lt;/p&gt;

&lt;h3 id=&#34;コンピュータ名を変更する&#34;&gt;コンピュータ名を変更する&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;システム環境設定 &amp;gt; 共有&lt;/code&gt;からコンピュータ名を変更できます。&lt;/p&gt;

&lt;p&gt;私は&lt;code&gt;silent&lt;/code&gt;とかいう適当な名前を付けました。静音性が高いといいなという願いを込めて。&lt;/p&gt;

&lt;h2 id=&#34;gccをインストール&#34;&gt;gccをインストール&lt;/h2&gt;

&lt;p&gt;gccがないとパッケージ管理システムでコンパイルができないので、
最初にgccは入れておくべきです。&lt;/p&gt;

&lt;h3 id=&#34;xcodeからgccをインストールする方法&#34;&gt;Xcodeからgccをインストールする方法。&lt;/h3&gt;

&lt;p&gt;これでgccが使えるようになりますが、LLVMベースのgccが入ってしまい、
&lt;a href=&#34;http://gam0022.net/blog/2012/07/27/getting-started-with-ruby-on-rails-on-mac/&#34;&gt;rvmがうまく動かなくなった&lt;/a&gt;りして厄介かもしれません。&lt;/p&gt;

&lt;p&gt;(でもMacを入手したら、Xcode使ってみたいですよね。)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;XcodeをAppStoreからインストールする。&lt;/li&gt;
&lt;li&gt;Xcode-&amp;gt; Preferences-&amp;gt; Downloads から、Command Line Tools をインストールする。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;osx-gcc-installerからgccをインストールする方法&#34;&gt;osx-gcc-installerからgccをインストールする方法&lt;/h3&gt;

&lt;p&gt;試してませんが、&lt;a href=&#34;https://github.com/kennethreitz/osx-gcc-installer/&#34;&gt;インストーラ&lt;/a&gt;があるので簡単に導入できるのではないかと思います。&lt;/p&gt;

&lt;h2 id=&#34;homebrewをインストール&#34;&gt;homebrewをインストール&lt;/h2&gt;

&lt;p&gt;パッケージ管理システムにはhomebrewを使うことにしました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/mxcl/homebrew/wiki/installation&#34;&gt;公式&lt;/a&gt;のコピペですが、これを叩けばhomebrewをインストールできます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ruby &amp;lt;(curl -fsSk https://raw.github.com/mxcl/homebrew/go)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MacにはRuby1.8が最初から入っているので、心配は不要です。(しかし1.8かよ)&lt;/p&gt;

&lt;h2 id=&#34;gitをインストール&#34;&gt;gitをインストール&lt;/h2&gt;

&lt;p&gt;homebrewが入ったら、gitのインストールは簡単です。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install git&lt;/code&gt;で終わりです。&lt;/p&gt;

&lt;p&gt;このあと紹介するVundleが良い例ですが、gitを使う機会は割と多いです。&lt;/p&gt;

&lt;h2 id=&#34;vim&#34;&gt;Vim&lt;/h2&gt;

&lt;h3 id=&#34;vimの設定の移行&#34;&gt;Vimの設定の移行&lt;/h3&gt;

&lt;p&gt;前の環境ではvimのプラグインを&lt;a href=&#34;https://github.com/gmarik/vundle/&#34;&gt;vundle&lt;/a&gt;で管理していたので、
これだけでVimの環境は引き継げました。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;前の環境の&lt;code&gt;.vimrc&lt;/code&gt;を&lt;code&gt;~/&lt;/code&gt;にコピー。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ vim +BundleInstall +qall&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vundleマジ神。&lt;/p&gt;

&lt;h3 id=&#34;カラースキマーの設定&#34;&gt;カラースキマーの設定&lt;/h3&gt;

&lt;p&gt;Ubuntuでは特に設定をしなくてもvimに色がついてたんですが、
どこでカラースキマーが定義されていたんでしょうかね。&lt;/p&gt;

&lt;p&gt;私は&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=105&#34;&gt;desert.vim&lt;/a&gt;というカラースキマーを入れました。手順はこんな感じ。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;desert.vim&lt;/code&gt;をダウンロードする。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.vim/colors&lt;/code&gt;に&lt;code&gt;mv&lt;/code&gt;する。&lt;/li&gt;
&lt;li&gt;以下を&lt;code&gt;~/.vimrc&lt;/code&gt;に書き加える。
&lt;code&gt;vim
syntax on
colorscheme desert
&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;これで最低限文化的なMac環境ができました。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
