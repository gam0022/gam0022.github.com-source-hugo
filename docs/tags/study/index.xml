<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gam0022.net</title>
    <link>https://gam0022.net/tags/study/index.xml</link>
    <description>Recent content on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2016 gam0022</copyright>
    <atom:link href="/tags/study/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>COJTの成果発表を終えて</title>
      <link>https://gam0022.net/blog/2014/02/01/cojt/</link>
      <pubDate>Sat, 01 Feb 2014 13:55:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2014/02/01/cojt/</guid>
      <description>&lt;h1 id=&#34;cojtとは&#34;&gt;COJTとは&lt;/h1&gt;

&lt;p&gt;1/31に、筑波大学キャンパスOJT(以下COJT)という大学の産学連携の授業の成果発表をしてきました。&lt;/p&gt;

&lt;p&gt;COJTには、ソフトウェアコースとハードウェアコースがあり、私はソフトウェアコースの方を受講しました。&lt;/p&gt;

&lt;p&gt;ソフトウェアコースでは、アクセル社のAG4というグラッフィクスLSIで動作するゲームの開発と発表を行いました。&lt;/p&gt;

&lt;p&gt;ハードウェアコースは、FPGAを使って各自好きな回路を作成したようです。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;開発したゲームについて&#34;&gt;開発したゲームについて&lt;/h1&gt;

&lt;p&gt;私たちのチームは「大五郎の冒険」という横スクロールアクションゲームを作りました。&lt;/p&gt;

&lt;p&gt;主人公は「大五郎」という犬で、行方不明になった、飼い主の「えりたん」を探しに冒険する、というストーリでした。&lt;/p&gt;

&lt;p&gt;知っている人は知っていると思いますが、「大五郎」も「えりたん」もTwitterのBotなので、
攻撃方法や技は Twitter のお気に入りやリツイートなどをモチーフにしました。&lt;/p&gt;

&lt;p&gt;スクリーンショットを貼るのが面倒なので、Twitterのツイートを埋め込みます。&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;【お知らせ】大五郎とえりたんが登場するアクションゲームを作りました！&amp;#10;1/31(金) 4・5限の時間にCOJTルーム(3C203)で遊べます！ぜひ見に来て下さい！ &lt;a href=&#34;https://twitter.com/search?q=%23daigoroubot&amp;amp;src=hash&#34;&gt;#daigoroubot&lt;/a&gt; &lt;a href=&#34;http://t.co/tYAP0cvvwa&#34;&gt;pic.twitter.com/tYAP0cvvwa&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/statuses/428066152917381120&#34;&gt;2014, 1月 28&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;【明日】大五郎とえりたんが登場するアクションゲームを作りました！ 1/31(金) 4・5限の時間にCOJTルーム(3C203)で遊べます！ぜひ見に来て下さい！ &lt;a href=&#34;https://twitter.com/search?q=%23daigoroubot&amp;amp;src=hash&#34;&gt;#daigoroubot&lt;/a&gt; &lt;a href=&#34;http://t.co/yMsYfx9TmU&#34;&gt;pic.twitter.com/yMsYfx9TmU&lt;/a&gt;&lt;/p&gt;&amp;mdash; がむ (@gam0022) &lt;a href=&#34;https://twitter.com/gam0022/statuses/428761820925423616&#34;&gt;2014, 1月 30&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;COJTなう！ &lt;a href=&#34;http://t.co/AZNyWpdUSr&#34;&gt;pic.twitter.com/AZNyWpdUSr&lt;/a&gt;&lt;/p&gt;&amp;mdash; atk (@hhelibe0207) &lt;a href=&#34;https://twitter.com/hhelibe0207/statuses/429111570275119105&#34;&gt;2014, 1月 31&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;説明書もあるので、アップロードしておきます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gam0022.net/images/posts/2014-02-01-cojt/manual.pdf&#34;&gt;大五郎の冒険 - 説明書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;画面はとてもゆるふわ系で明るい感じですが、難易度は鬼畜です。&lt;/p&gt;

&lt;p&gt;それを想定して、30回コンティニュー可能にしました。&lt;/p&gt;

&lt;h1 id=&#34;開発中のこと&#34;&gt;開発中のこと&lt;/h1&gt;

&lt;h2 id=&#34;全体の流れ&#34;&gt;全体の流れ&lt;/h2&gt;

&lt;p&gt;大学の後期の授業のプロジェクトだったので、10月から1月の4ヶ月の開発期間でした。&lt;/p&gt;

&lt;p&gt;4ヶ月というと長いような感じがしますが、この間にAG4での開発を覚えるための課題があったり、
ゲームの企画を考えたり、冬休みや就活などがあったので、実際に集中して開発できたのは、冬休み明けの1ヶ月くらいでした。&lt;/p&gt;

&lt;p&gt;企画については、ソフトウェアコースの12名全員で12個の企画を考えるのですが、
その中から半分の6つの企画しか採用されません！&lt;/p&gt;

&lt;p&gt;採用されなかった企画の人は、くじ引きで採用された企画の人とペアを組んで開発しました。
ちなみに、講師の独断と偏見によって、企画は選定は行われました。&lt;/p&gt;

&lt;p&gt;私の企画は幸いなことに審査を通過して、好きなゲームを開発することができました。&lt;/p&gt;

&lt;h3 id=&#34;音声収録&#34;&gt;音声収録&lt;/h3&gt;

&lt;p&gt;また、1月の10日に、実際にスタジオまで行って、ゲーム用の音声をプロ声優の&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E5%B9%B3%E7%94%B0%E7%9C%9F%E8%8F%9C&#34;&gt;平田真菜&lt;/a&gt;さんに収録して頂きました。&lt;/p&gt;

&lt;p&gt;プロの声優さんは、本当にすごかったです。テンションが上がりました。&lt;/p&gt;

&lt;p&gt;少年から幼女、犬まで、あらゆる役を完璧に演じてしまったので感動しました。&lt;/p&gt;

&lt;p&gt;この音声収録ができただけでも、この授業を受けた価値があったなと思いました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2014-02-01-cojt/voice.jpg&#34; alt=&#34;音声収録風景&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;技術的なこと&#34;&gt;技術的なこと&lt;/h2&gt;

&lt;p&gt;AG4に対応したコンパイラがCしか無くて苦労しました。(しかも古いC89とかの古い規格でした。)&lt;/p&gt;

&lt;p&gt;動的デバッグもできなかったので、モダンな開発方法に慣れた私にとっては非常に辛いものでした。&lt;/p&gt;

&lt;p&gt;allocなどで動的にメモリを確保することもできなかったので、Taskシステムというのを私のチームは採用することにしました。&lt;/p&gt;

&lt;h3 id=&#34;taskシステム&#34;&gt;Taskシステム&lt;/h3&gt;

&lt;h4 id=&#34;継承&#34;&gt;継承&lt;/h4&gt;

&lt;p&gt;例えばアクションゲームであれば、自機や敵やブロックを管理するときに、x,y座標やw,hの大きさなどは共通する情報なので、
これはBaseObjectのフィールドとして保持しておいて、自機ならHPやら弾の数などを派生クラスのフィールドとして保持しておきたい場面があると思います。&lt;/p&gt;

&lt;p&gt;要するに継承がしたかったわけですが、これは union を使って解決しました。&lt;/p&gt;

&lt;p&gt;Taskという struct を BaseObject として、Task の中に Data という union 型のフィールドを用意しました。
union には 派生クラス用のフィールドを保持する PlayerData や EnemyData などの struct を入れることで、継承っぽいことをしました。&lt;/p&gt;

&lt;p&gt;union の実用的な使い方を生まれて初めて実践したような気がします。&lt;/p&gt;

&lt;h4 id=&#34;動的確保&#34;&gt;動的確保&lt;/h4&gt;

&lt;p&gt;継承っぽいことをすることで、ゲーム内の全てのオブジェクトを Task という struct で管理できるようになりました。&lt;/p&gt;

&lt;p&gt;動的確保については、Task 型の配列をあらかじめ配列として十分な数を確保しておいて、
allocTask() という関数で、未使用な配列の要素のポインタを返すようにます。&lt;/p&gt;

&lt;p&gt;不要になった Task は、destoryFlag を立てておいて、allocTask() が呼ばれた時に、
destoryFlag が立った要素を返すようにすれば、簡単なGCっぽいこともできて完璧でした。&lt;/p&gt;

&lt;h3 id=&#34;github-の-organization&#34;&gt;GitHub の Organization&lt;/h3&gt;

&lt;p&gt;GitHub の Organization を初めてまともに利用しましたが、簡単に利用できました。&lt;/p&gt;

&lt;p&gt;pull request とかするよりは断然楽だったと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cojt-daigorou/daigorou&#34;&gt;https://github.com/cojt-daigorou/daigorou&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;キャラクターの動き&#34;&gt;キャラクターの動き&lt;/h3&gt;

&lt;p&gt;COJTに実際に見学した人しか分からないとは思いますが、大五郎の動きがすごいヌルヌルしていてよく出来ていたと思います。(手前味噌すぎる。)&lt;/p&gt;

&lt;p&gt;大五郎のモーションについては相方が全部やってくれました。大五郎の3Dモデルを作成して、MMDでモーションを作って、2Dにレンダリングしました。&lt;/p&gt;

&lt;h1 id=&#34;投票結果&#34;&gt;投票結果&lt;/h1&gt;

&lt;p&gt;成果発表では、見学者の投票によってゲームの順位が決められるのですが、
私たちのチームは残念ながら上位1,2チームに入賞することはできまんでした。
(上位1チームは打ち上げ無料、2チームは成績がA+ という特典がありました。)&lt;/p&gt;

&lt;p&gt;といっても、どのチームも僅差で、1位のチームともそこまで差はつかなかったので、まあ良かったことにします。&lt;/p&gt;

&lt;p&gt;6チームありましたが、どのチームも普通に実装力が高くて、ゲームとしての完成度も普通に高かった印象でした。&lt;/p&gt;

&lt;p&gt;私たちのチームも技術的には十分高かったとは思うのですが、
他のチームとの差別化は出来なかったし、すごいと思わせるようなアピールも特に用意しなかったので当然な感じもします。&lt;/p&gt;

&lt;p&gt;また、細かいUIのブラッシュアップや、ゲームを実際遊んでいるときの楽しさを
突き詰めることができなかったのが敗因だったかなと思います。&lt;/p&gt;

&lt;p&gt;アクションゲームを選んだ理由としては、3分くらいで次々に遊ぶとしたら、ほとんどの人はルールが分かるし、
楽しんでくれる人も多いだろうという思惑があったのですが、その点に頼りすぎてしまった様な気がします。&lt;/p&gt;

&lt;p&gt;難易度はものすごく高くしたつもりでしたが、半分くらいの人が最終面までクリアして、エンディングに辿り着いたので、
その点は想定していたくらいの難易度にできて、とても良かったと思います。&lt;/p&gt;

&lt;h1 id=&#34;最後に&#34;&gt;最後に&lt;/h1&gt;

&lt;p&gt;総合的に考えると、COJTを受講して良かったと思います。&lt;/p&gt;

&lt;p&gt;前に&lt;a href=&#34;https://gam0022.net/blog/2013/12/07/cojt-faq/&#34;&gt;COJTを受講しようと考えている人へ&lt;/a&gt;というエントリーを書いたので、詳しくはそちらを参照してください。&lt;/p&gt;

&lt;p&gt;授業の内容というよりは、3編成やTAなどの新しい人脈が増えて良かったという点ですごい価値がありました。&lt;/p&gt;

&lt;p&gt;ちょっとしたデスマーチ感も個人的にはすごく楽しかったです!!
レッドブル美味しい!!&lt;/p&gt;

&lt;h1 id=&#34;他のチームのエントリー&#34;&gt;他のチームのエントリー&lt;/h1&gt;

&lt;p&gt;1位のチームの人のエントリーです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hurutoriya.tumblr.com/post/75265645406/get&#34;&gt;実験の制作課題の投票で無事に一位をGETしてきた。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>インタラクティブCGの成果報告</title>
      <link>https://gam0022.net/blog/2014/01/18/interactive-cg/</link>
      <pubDate>Sat, 18 Jan 2014 16:54:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2014/01/18/interactive-cg/</guid>
      <description>&lt;h1 id=&#34;近状報告&#34;&gt;近状報告&lt;/h1&gt;

&lt;p&gt;早いもので大学3年の授業が終わってCOJTを残すのみとなってしまいました。&lt;/p&gt;

&lt;p&gt;一昨日成績開示があったのですが、卒業に必要な単位のうち取り切っていないのは、
卒業研究と技術英語と体育だけなので、実質的に大学の授業は取り終わったに等しいです。&lt;/p&gt;

&lt;p&gt;3年の秋学期のABモジュールに開講された、インタラクティブCGという授業を履修したのですが、
今学期で一番楽しい授業だったと思うので、振り返ってみます。&lt;/p&gt;

&lt;p&gt;ちなみに、去年にも&lt;a href=&#34;https://gam0022.net/blog/2013/03/12/computer-graphics/&#34;&gt;似たような記事&lt;/a&gt;を書いていました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;インタラクティブcgとは&#34;&gt;インタラクティブCGとは&lt;/h1&gt;

&lt;p&gt;基本的には、C++で OpenGL と FLTK を使ってゴリゴリCG関係のプログラミングをする感じでした。&lt;/p&gt;

&lt;p&gt;この授業の面白い特徴として、毎回の課題で受講者全員で投票を行うコンテストがありました。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;コンテストで上位3名に入賞すると、図書カードがゲットできます！！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;結論から言うと、全3回のコンテストで、3回とも入賞することができました!!&lt;/p&gt;

&lt;p&gt;これはこれまで誰も成し遂げたことがない未踏の快挙らしいです。&lt;/p&gt;

&lt;p&gt;全3回の課題を振り返ってみます。&lt;/p&gt;

&lt;h2 id=&#34;課題1-impressionist&#34;&gt;課題1 Impressionist&lt;/h2&gt;

&lt;h3 id=&#34;課題の概要&#34;&gt;課題の概要&lt;/h3&gt;

&lt;p&gt;説明が面倒なので、授業の課題の概要から引用します。&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4 id=&#34;impressionist-印象派風に画像をレンダリングするプログラム&#34;&gt;Impressionist ～印象派風に画像をレンダリングするプログラム～&lt;/h4&gt;

&lt;p&gt;印象派（Impressionist）というプログラムは印象派の書いた絵のような画像を作り出すインタラクティブなプログラムです。印象派画像を作り出すために、ユーザは画像を読み込み空白のピクセルキャンバスに一連の“ブラシストローク”を書き込む。これらのブラシストロークはもとの画像から色を取り込み、以下のサンプルのような、絵画のような感じを作り出す。要は写真から、油絵風の画像を作る。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;成果物&#34;&gt;成果物&lt;/h3&gt;

&lt;p&gt;星型のブラシを実装して、2匹のトラの画像を加工して、こんな画像を作りました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2014-01-18-interactive-cg/impressionist.png&#34; alt=&#34;Impressionist - Tiger&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;コンテスト結果&#34;&gt;コンテスト結果&lt;/h3&gt;

&lt;p&gt;3位に入賞して、図書館500円分をゲットしました。&lt;/p&gt;

&lt;p&gt;正直、この課題は元の画像を選ぶセンスが90%くらいな気がしました。&lt;/p&gt;

&lt;h2 id=&#34;課題2-modeler&#34;&gt;課題2 Modeler&lt;/h2&gt;

&lt;h3 id=&#34;課題の概要-1&#34;&gt;課題の概要&lt;/h3&gt;

&lt;p&gt;だいたいこんな感じの課題でした。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;OpenGL でプリミティブを描画する関数を作る。例えば、トーラス型(ドーナッツ型)など。&lt;/li&gt;
&lt;li&gt;それを組合せて何かモデルを作る。&lt;/li&gt;
&lt;li&gt;rotate や translate でモデルを可動させてアニメーションを作る。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;成果物-1&#34;&gt;成果物&lt;/h3&gt;

&lt;p&gt;ライオンがドーナッツを追いかけて走るアニメーションを作りました。&lt;/p&gt;

&lt;p&gt;版権的にヤバそうなのは気のせいです。&lt;/p&gt;

&lt;p&gt;ドーナッツ型は座標計算して、3角メッシュで表現しています。&lt;a href=&#34;http://gam0022.net/blog/2013/03/12/computer-graphics/&#34;&gt;昔のコード&lt;/a&gt;が参考になりました。&lt;/p&gt;

&lt;p&gt;実は、足の部分は回転体になっているのですが、楕円球で十分だったような気がします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2014-01-18-interactive-cg/modeler.gif&#34; alt=&#34;Modeler - Lion&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;コンテスト結果-1&#34;&gt;コンテスト結果&lt;/h3&gt;

&lt;p&gt;2位に入賞して、図書館500円分をゲットしました。&lt;/p&gt;

&lt;p&gt;gifアニメのサイズが2MB以上になってしまって、焦りました。&lt;/p&gt;

&lt;h2 id=&#34;課題3-raytracer&#34;&gt;課題3 RayTracer&lt;/h2&gt;

&lt;h3 id=&#34;課題の概要-2&#34;&gt;課題の概要&lt;/h3&gt;

&lt;p&gt;だいたいこんな感じの課題でした。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;POV-Ray 互換のアプリをC++で実装する（さすがにゼロベースではキツイので、雛形みたいのはありました）&lt;/li&gt;
&lt;li&gt;POV-Ray ファイルを作って、1. のプログラムで描画させる&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;POV-Ray というのは、レイトレーシングソフトウェアのことです。&lt;/p&gt;

&lt;h3 id=&#34;成果物-2&#34;&gt;成果物&lt;/h3&gt;

&lt;p&gt;1.のPOV-Ray 互換のアプリに、こんな機能を実装しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;trimesh（3角メッシュの集合）の描画&lt;/li&gt;
&lt;li&gt;再帰的なレイの反射&lt;/li&gt;
&lt;li&gt;再帰的なレイの屈折&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.は、&lt;strong&gt;プログラミング言語のRubyをつかって&lt;/strong&gt;、宝石のRubyのPOV-Rayファイルを頑張って生成しました。&lt;/p&gt;

&lt;p&gt;ブリリアンカットという形状を、trimeshで表現しています。&lt;/p&gt;

&lt;p&gt;Xファイル パースして POV-Ray の trimesh に変換しつつ、うまい具合に配置するRubyのコードを実装しました。&lt;/p&gt;

&lt;p&gt;光源の設定をするのが非常に大変でした。&lt;/p&gt;

&lt;p&gt;下の画像は、アンチエイリアスするために、2倍で描画して、Macのプレビューで縮小したものです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2014-01-18-interactive-cg/raytracer.png&#34; alt=&#34;RayTracer - Ruby&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;コンテスト結果-2&#34;&gt;コンテスト結果&lt;/h3&gt;

&lt;p&gt;1位に入賞しました。まだ、図書カードは貰ってないので、早く欲しいです（2015/12/16追記。受け取れないうちに大学を卒業してしまいました…）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>コンピュータグラフィックス基礎の成果報告</title>
      <link>https://gam0022.net/blog/2013/03/12/computer-graphics/</link>
      <pubDate>Tue, 12 Mar 2013 23:28:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2013/03/12/computer-graphics/</guid>
      <description>

&lt;p&gt;久々の更新です。&lt;/p&gt;

&lt;p&gt;早いもので大学2年の授業が終わって春休みになってしまいました。&lt;/p&gt;

&lt;p&gt;3学期には、&lt;a href=&#34;http://www.coins.tsukuba.ac.jp/syllabus/GB13704.html&#34;&gt;コンピュータグラフィックス基礎&lt;/a&gt;という授業を履修したのですが、
今学期で一番楽しい授業だったなーと思うので振り返ってみます。&lt;/p&gt;

&lt;p&gt;基本的にはOpenGLを使って色々しました。&lt;/p&gt;

&lt;p&gt;特に力を入れた課題などを紹介します。&lt;/p&gt;

&lt;p&gt;ソースコードなどはすべて&lt;a href=&#34;https://github.com/gam0022/computer-graphics/&#34;&gt;github&lt;/a&gt;にあるので、
気になる人はぜひ見てね!&lt;/p&gt;

&lt;h1 id=&#34;課題3-asteroids&#34;&gt;課題3 ASTEROIDS&lt;/h1&gt;

&lt;p&gt;OpenGLを使ってアニメーションを作るという課題があったので、
全方位シューティングゲームを作ってみました。&lt;/p&gt;

&lt;p&gt;技術的な点だと、自機、隕石、弾の3つは、慣性移動、衝突判定、描画などは共通の処理でできるので、
この3つを&lt;code&gt;object&lt;/code&gt;という構造体1つで管理して、同じような処理を何度も書かないようにしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/3/title.png&#34; alt=&#34;title画面&#34; /&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/3/playing.png&#34; alt=&#34;プレイ中&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/3/gameover.png&#34; alt=&#34;ゲームオーバー&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;課題4-立体の展開図&#34;&gt;課題4 立体の展開図&lt;/h1&gt;

&lt;p&gt;OpenGLの回転と平行移動を駆使して、立体の展開図のアニメーションを作りました。&lt;/p&gt;

&lt;p&gt;まずは立方体の展開図。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img1_1.png&#34; alt=&#34;立方体-1&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img1_2.png&#34; alt=&#34;立方体-2&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img1_3.png&#34; alt=&#34;立方体-3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;正12面体となると、座標の計算が大変でしたが、気合で実装しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img2_1.png&#34; alt=&#34;正12面体-1&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img2_2.png&#34; alt=&#34;正12面体-2&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img2_3.png&#34; alt=&#34;正12面体-3&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/4/img2_4.png&#34; alt=&#34;正12面体-4&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;課題5-ベジエ曲線&#34;&gt;課題5 ベジエ曲線&lt;/h1&gt;

&lt;p&gt;マウスで制御点を入力してベジエ曲線を描く課題です。&lt;/p&gt;

&lt;p&gt;定義式をプログラムにするだけの簡単なお仕事でした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/5/img1.png&#34; alt=&#34;制御点が３次のベジエ曲線&#34; /&gt;&lt;/p&gt;

&lt;p&gt;オプションとして3次元バージョンにも挑戦しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/5/img2.png&#34; alt=&#34;制御点が３次のベジエ曲線の3次元&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;課題7-objファイルで立体を表現&#34;&gt;課題7 OBJファイルで立体を表現&lt;/h1&gt;

&lt;p&gt;OBJファイルという、頂点と面の2つの情報で立体を表す立体図形のフォーマットがあるのですが、
このOBJファイルを出力するプログラムを作りました。&lt;/p&gt;

&lt;p&gt;ちなみに、OBJファイルを描画するプログラムは先生の方で用意してくれました。&lt;/p&gt;

&lt;p&gt;球体は普通にやると頂点部分で例外処理があって面倒ですが、頂点部分に複数の頂点がくるようにして楽しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/sphere.png&#34; alt=&#34;球体&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Wikipediaにトーラスの式があるので、それを参考にして作りました。&lt;/p&gt;

&lt;p&gt;球の課題の式の定義部分を変更するだけで、できたので楽でした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/torus.png&#34; alt=&#34;トーラス&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3角関数で半径を変化させて、適当な回転体を作りました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/revolution_1.png&#34; alt=&#34;回転体&#34; /&gt;&lt;/p&gt;

&lt;p&gt;また、マウスで入力した線から任意の回転体を作ったりしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/ufo.png&#34; alt=&#34;UFO&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/koma.png&#34; alt=&#34;コマ&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/cup.png&#34; alt=&#34;グラス&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/hoge.png&#34; alt=&#34;hoge&#34; /&gt;&lt;/p&gt;

&lt;p&gt;また、マウスで線を描くときに下から上に線を引くと、面が裏返るので、それを利用してプリンみたいなのも作りました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/7/pudding.png&#34; alt=&#34;プリン&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;課題9-レイトレーシング&#34;&gt;課題9 レイトレーシング&lt;/h1&gt;

&lt;p&gt;レイトレーシングをやりました。&lt;/p&gt;

&lt;p&gt;普通にやるとつまらないので、いろいろ工夫しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;レイを再帰的に計算して、ピカピカに&lt;/li&gt;
&lt;li&gt;3x3でアンチエイリアス&lt;/li&gt;
&lt;li&gt;色は乱数でRGBを求めると鮮やかにならないので、HSVで計算&lt;/li&gt;
&lt;li&gt;Zbuffer的な概念を取り入れて、球が床に食い込んでも重なっても大丈夫なように&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/9/img3-1.png&#34; alt=&#34;レイトレーシング1&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/9/img3-2.png&#34; alt=&#34;レイトレーシング2&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/9/img3-3.png&#34; alt=&#34;レイトレーシング3&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/9/img3-4.png&#34; alt=&#34;レイトレーシング4&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/9/img3-5.png&#34; alt=&#34;レイトレーシング5&#34; /&gt;
&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/9/img4-1.png&#34; alt=&#34;レイトレーシング6&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;課題10-布のシュミレーション&#34;&gt;課題10 布のシュミレーション&lt;/h1&gt;

&lt;p&gt;Mass-Spring モデルによる簡易的な布の物理シミュレーションをしました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/10/img1.png&#34; alt=&#34;布のシュミレーション&#34; /&gt;&lt;/p&gt;

&lt;p&gt;球体との衝突判定を追加してみたのが次です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://gam0022.net/images/posts/2013-03-12-computer-graphics/10/img2.png&#34; alt=&#34;布のシュミレーション(球との衝突)&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;こうして振り返ると、かなり色々な課題に挑戦しましたが、どれも楽しかったです。&lt;/p&gt;

&lt;p&gt;CGを自分の研究としてもいいなーとか思ってしまいました。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
