<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gam0022.net</title>
    <link>https://gam0022.net/tags/heroku/index.xml</link>
    <description>Recent content on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2016 gam0022</copyright>
    <atom:link href="/tags/heroku/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Rails4のアプリをHerokuで動かす</title>
      <link>https://gam0022.net/blog/2013/09/17/run-rails4-on-heroku/</link>
      <pubDate>Tue, 17 Sep 2013 22:09:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2013/09/17/run-rails4-on-heroku/</guid>
      <description>&lt;p&gt;Rails4のアプリをHerokuで動かすまでにしたことをメモします。&lt;/p&gt;

&lt;h1 id=&#34;1-rails4-のプロジェクトを作る&#34;&gt;1. Rails4 のプロジェクトを作る&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://guides.rubyonrails.org/getting_started.html&#34;&gt;Getting Started with Rails&lt;/a&gt;を参考にして Rails4 のプロジェクトを作りました。&lt;/p&gt;

&lt;p&gt;念の為にバージョンもメモしておきます。&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;ruby&lt;/dt&gt;
&lt;dd&gt;ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]&lt;/dd&gt;
&lt;dt&gt;rails&lt;/dt&gt;
&lt;dd&gt;Rails 4.0.0&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Mac OS X でやりました。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;2-heroku-に登録&#34;&gt;2. Heroku に登録&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://www.heroku.com/&#34;&gt;heroku.com&lt;/a&gt; に 登録して、Heroku のコマンドラインツールをインストールして、公開鍵を登録したような記憶があります。&lt;/p&gt;

&lt;p&gt;(あまり記憶に無いので、たぶん指示に従っていけばいい感じだったと思います。)&lt;/p&gt;

&lt;h1 id=&#34;3-production用のdb-を-sqlite3-pg-に変更&#34;&gt;3. production用のDB を sqlite3 → pg に変更&lt;/h1&gt;

&lt;p&gt;Heroku では SQLite3 に対応してないので、production用のデータベースに PostgreSQL(pg) を使うために &lt;code&gt;Gemfile&lt;/code&gt;と&lt;code&gt;config/databae.yml&lt;/code&gt;を編集します。&lt;/p&gt;

&lt;p&gt;Gemfile の diff&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;gem &#39;rails&#39;, &#39;4.0.0&#39;

# Use sqlite3 as the database for Active Record
-gem &#39;sqlite3&#39;
+gem &#39;sqlite3&#39;, groups: %w(test development), require: false
+gem &#39;pg&#39;, groups: %w(production), require: false

# Use SCSS for stylesheets
gem &#39;sass-rails&#39;, &#39;~&amp;gt; 4.0.0&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;config/database.yml の diff&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;  timeout: 5000

production:
-  adapter: sqlite3
-  database: db/production.sqlite3
+  adapter: pg
+  database: db/production.pg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最後に、&lt;code&gt;bundle install&lt;/code&gt;をします。&lt;/p&gt;

&lt;h2 id=&#34;補足&#34;&gt;補足&lt;/h2&gt;

&lt;p&gt;ちなみに、SQLite3 のままで、&lt;code&gt;git push heroku&lt;/code&gt;すると、こんな感じのエラーが起こりました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;       Gem files will remain installed in /tmp/build_8njhwta846es/vendor/bundle/ruby/2.0.0/gems/sqlite3-1.3.8 for inspection.
       Results logged to /tmp/build_8njhwta846es/vendor/bundle/ruby/2.0.0/gems/sqlite3-1.3.8/ext/sqlite3/gem_make.out
       An error occurred while installing sqlite3 (1.3.8), and Bundler cannot continue.
       Make sure that `gem install sqlite3 -v &#39;1.3.8&#39;` succeeds before bundling.
 !
 !     Failed to install gems via Bundler.
 !
 !     Detected sqlite3 gem which is not supported on Heroku.
 !     https://devcenter.heroku.com/articles/sqlite3
 !

 !     Push rejected, failed to compile Ruby/Rails app

To git@heroku.com:pacific-waters-7608.git
 ! [remote rejected] master -&amp;gt; master (pre-receive hook declined)
error: failed to push some refs to &#39;git@heroku.com:pacific-waters-7608.git&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;4-git-リポジトリを作る&#34;&gt;4. Git リポジトリを作る&lt;/h1&gt;

&lt;p&gt;普通に Git リポジトリを作ります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git add .
git commit -m &amp;quot;first commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;5-heroku-に-deploy-する&#34;&gt;5. Heroku に deploy する&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;heroku create # このとき、`heroku create アプリ名` で、任意のアプリ名にもできる。
git push heroku # Heroku への deploy は git の commit で行うよう。時間がかかる。
heroku open # ブラウザで確認できる。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;補足-1&#34;&gt;補足&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;git push heroku&lt;/code&gt; に失敗して、&lt;code&gt;heroku create&lt;/code&gt; しているうちに、アプリが5個を越えてしまったので、
&lt;a href=&#34;https://dashboard.heroku.com/apps&#34;&gt;heroku dashbord&lt;/a&gt; からアプリを消していたら、
push 先の heroku(リモートリポジトリ) が無いとかいうエラーになってしまいました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push heroku

 !  No such app as pacific-waters-7608.

fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうなってしまったら、&lt;code&gt;.git/config&lt;/code&gt; を書き換えて、&lt;code&gt;[remote &amp;quot;heroku&amp;quot;]&lt;/code&gt;の部分を消してから、もう一度 &lt;code&gt;heroku create&lt;/code&gt;すればいいです。&lt;/p&gt;

&lt;p&gt;もしくは、url の部分を 存在するアプリ名に書き換えてもいい気がします。&lt;/p&gt;

&lt;h1 id=&#34;6-heroku-のデータベースで-rake-db-migrate-する&#34;&gt;6. Heroku のデータベースで rake db:migrate する&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;heroku open&lt;/code&gt;して、動作を確認すれば分かると思いますが、このままだと Heroku 側のDBが空なので、エラーになります。&lt;/p&gt;

&lt;p&gt;なので、Heroku で rake db:migrate します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;heroku run rake db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;7-ハマった点&#34;&gt;7. ハマった点&lt;/h1&gt;

&lt;p&gt;localでは動くのに、Herokuだとそのままだと上手くいかない場合があります。&lt;/p&gt;

&lt;p&gt;そんな場合は、次のように&lt;code&gt;config/environments/production.rb&lt;/code&gt;の設定を書き換えて、もう一度&lt;code&gt;git push heroku&lt;/code&gt;しましょう。&lt;/p&gt;

&lt;h2 id=&#34;cssやjsが読み込めない場合&#34;&gt;CSSやJSが読み込めない場合&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;config/environments/production.rb&lt;/code&gt; 内で &lt;code&gt;config.assets.compile = true&lt;/code&gt;にします。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;config/environments/production.rb&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;   # config.assets.css_compressor = :sass

   # Do not fallback to assets pipeline if a precompiled asset is missed.
-  config.assets.compile = false
+  config.assets.compile = true

   # Generate digests for assets URLs.
   config.assets.digest = true

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;public-以下のファイルが404になる場合&#34;&gt;public 以下のファイルが404になる場合&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;config/environments/production.rb&lt;/code&gt; 内で &lt;code&gt;config.serve_static_assets = true&lt;/code&gt;にします。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;config/environments/production.rb&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;   # config.action_dispatch.rack_cache = true

   # Disable Rails&#39;s static asset server (Apache or nginx will already do this).
-  config.serve_static_assets = false
+  config.serve_static_assets = true

   # Compress JavaScripts and CSS.
   config.assets.js_compressor = :uglifier
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;完&#34;&gt;完&lt;/h1&gt;

&lt;p&gt;これでやっと Heroku で Rails4 を動かせるようになりました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;heroku open&lt;/code&gt; で確認しましょう。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
