<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gam0022.net</title>
    <link>https://gam0022.net/tags/gem/index.xml</link>
    <description>Recent content on gam0022.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>&amp;copy; 2016 gam0022</copyright>
    <atom:link href="/tags/gem/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Rubyのgemのメモ</title>
      <link>https://gam0022.net/blog/2013/12/26/gem-memo/</link>
      <pubDate>Thu, 26 Dec 2013 10:46:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2013/12/26/gem-memo/</guid>
      <description>

&lt;p&gt;gem関連に関してメモを残します。&lt;/p&gt;

&lt;h1 id=&#34;gem-ファイルを展開してパッケージの中身を見る&#34;&gt;.gem ファイルを展開してパッケージの中身を見る&lt;/h1&gt;

&lt;p&gt;.gem ファイルを展開してパッケージの中身を見る方法を紹介します。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem unpack&lt;/code&gt;はgemをインストールしたくないけど、単に中身を見たいときなどに役に立ちます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem unpack xxx.gem&lt;/code&gt; のように使います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[~/Downloads]$ gem unpack unicode_math-1.2.0.gem
Unpacked gem: &#39;/Users/gam0022/Downloads/unicode_math-1.2.0&#39;
[~/Downloads]$
[~/Downloads]$ tree unicode_math-1.2.0
unicode_math-1.2.0
├── Gemfile
├── LICENSE.txt
├── README.md
├── Rakefile
├── lib
│   ├── unicode_math
│   │   ├── constants.rb
│   │   ├── division.rb
│   │   ├── exponents.rb
│   │   ├── fractions.rb
│   │   ├── multiplication.rb
│   │   ├── roots.rb
│   │   ├── set.rb
│   │   ├── sigma.rb
│   │   └── trigonometry.rb
│   └── unicode_math.rb
├── spec
│   ├── spec_helper.rb
│   ├── support
│   │   └── random.rb
│   └── unicode_math
│       ├── constants_spec.rb
│       ├── division_spec.rb
│       ├── exponents_spec.rb
│       ├── fractions_spec.rb
│       ├── multiplication_spec.rb
│       ├── root_spec.rb
│       ├── set_spec.rb
│       ├── sigma_spec.rb
│       └── trigonometry_spec.rb
└── unicode_math.gemspec

5 directories, 26 files
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;gem-ファイルから-gem-をインストールする&#34;&gt;.gem ファイルから gem をインストールする&lt;/h1&gt;

&lt;p&gt;.gem ファイルから gem をインストールする方法を紹介します。&lt;/p&gt;

&lt;p&gt;RubyGems でリンク切れを起こしたgemを無理やりインストールしたいときに使いました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install -l xxx.gem&lt;/code&gt; のように使います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[~/Downloads]$ gem install -l unicode_math-1.2.0.gem

Successfully installed unicode_math-1.2.0
Parsing documentation for unicode_math-1.2.0
Installing ri documentation for unicode_math-1.2.0
1 gem installed
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>BundlerでC拡張を含んだgemを公開する</title>
      <link>https://gam0022.net/blog/2013/10/18/gems-with-extensions/</link>
      <pubDate>Fri, 18 Oct 2013 01:22:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2013/10/18/gems-with-extensions/</guid>
      <description>&lt;h1 id=&#34;はじめに&#34;&gt;はじめに&lt;/h1&gt;

&lt;p&gt;先日、&lt;a href=&#34;https://rubygems.org/gems/immutable_list&#34;&gt;immutable_list&lt;/a&gt; というgemを公開したのですが、
思っていたよりも簡単に &lt;a href=&#34;https://rubygems.org/gems/immutable_list&#34;&gt;rubygems.org&lt;/a&gt; に登録することができて感動しました。&lt;/p&gt;

&lt;p&gt;gemを作るには、色々な方法があるようですが、最近だとBundler を使う方法が一番シンプルで良さそうです。&lt;/p&gt;

&lt;p&gt;RubyGems に gem を登録するためには、gitのリモートリポジトリが必要ですが、ここでは GitHub を利用します。&lt;/p&gt;

&lt;p&gt;あと、よく質問されるのですが、RubyGems に登録するために審査は一切ありません。&lt;/p&gt;

&lt;h2 id=&#34;tips-gemの命名方法&#34;&gt;Tips: gemの命名方法&lt;/h2&gt;

&lt;p&gt;本題とはズレますが、gemの命名にはルールがあるので軽く紹介します。&lt;/p&gt;

&lt;p&gt;gemname には、小文字のアルファベット、数字、ハイフン、アンダースコア、ドットが使用可能のようです。&lt;/p&gt;

&lt;p&gt;ハイフンとアンダースコアは次のように使い分けることが推奨されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;- (ハイフン) : パスの区切り&lt;/li&gt;
&lt;li&gt;_ (アンダースコア) : 単語の区切り&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;普通のgemを公開する場合&#34;&gt;普通のgemを公開する場合&lt;/h1&gt;

&lt;p&gt;C拡張を含まない、Rubyで実装したライブラリをgemにする場合は、とても簡単です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://shoprev.hatenablog.com/entry/2013/08/02/205735&#34;&gt;はじめてbundlerでruby gem作ってgithubとrubygemsに上げてみた&lt;/a&gt; という記事が分かりやすかったので、
Rubyで実装したライブラリをgemにする場合はこちらを参考にすれば良いと思います。&lt;/p&gt;

&lt;p&gt;基本的には、次のような流れになります。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;$ bundle gem &amp;lt;gemname&amp;gt;&lt;/code&gt; でgemを作るために必要なファイルの雛形の一式が作られるので、細かい部分を編集する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ cd &amp;lt;gemname&amp;gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lib/&amp;lt;gemname&amp;gt;.rb&lt;/code&gt; にライブラリの本体を実装する。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lib/&amp;lt;gemname&amp;gt;/version.rb&lt;/code&gt; でバージョンを指定する。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;gemname&amp;gt;.gemspec&lt;/code&gt; のTODOを埋める。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;gemのパッケージを作成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ gem build &amp;lt;gemname&amp;gt;.gemspec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ rake install&lt;/code&gt; で動作を念のためにテスト。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;GitHub に push&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ファイル一式をGitHubに登録する。(普通のgitのリポジトリを作るのと同じなので詳しい説明は省きます。)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;RubyGems に push&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ gem push pkg/&amp;lt;gemname&amp;gt;&amp;gt;-x.x.x.gem&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;これで、世界中の誰からでも &lt;code&gt;$ gem install &amp;lt;gemname&amp;gt;&lt;/code&gt; で利用可能になる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;バージョンアップ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lib/&amp;lt;gemname&amp;gt;/version.rb&lt;/code&gt; を編集。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ rake release&lt;/code&gt; で RubyGems と GitHub の両方に push してくれる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;削除&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ gem yank &amp;lt;gemname&amp;gt; -v x.x.x&lt;/code&gt; で RubyGems から削除できる。&lt;/li&gt;
&lt;li&gt;履歴は残るので、完全に消すのは中の人にコンタクトするしかないよう。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;c拡張を含むgemを公開する場合&#34;&gt;C拡張を含むgemを公開する場合&lt;/h1&gt;

&lt;p&gt;C拡張を含むgemを作りたい場合は、ちょっと面倒です。&lt;/p&gt;

&lt;p&gt;日本語の記事が見つからなかったので、&lt;a href=&#34;http://guides.rubygems.org/gems-with-extensions/&#34;&gt;Gems with Extensions&lt;/a&gt;を参考にして頑張りました。&lt;/p&gt;

&lt;p&gt;ここでは、&lt;code&gt;immutable_list&lt;/code&gt; という gem 名を例にとって、C拡張を含むgemを公開するまでを説明します。&lt;/p&gt;

&lt;h2 id=&#34;1-雛形を作る&#34;&gt;1. 雛形を作る&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bundle gem immutable_list
      create  immutable_list/Gemfile
      create  immutable_list/Rakefile
      create  immutable_list/LICENSE.txt
      create  immutable_list/README.md
      create  immutable_list/.gitignore
      create  immutable_list/immutable_list.gemspec
      create  immutable_list/lib/immutable_list.rb
      create  immutable_list/lib/immutable_list/version.rb
Initializating git repo in /Users/gam0022/git/gem/t/immutable_list
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-雛形を編集&#34;&gt;2. 雛形を編集&lt;/h2&gt;

&lt;p&gt;C拡張を自動でコンパイルするようにするために、書き加えないといけないことが多いです。&lt;/p&gt;

&lt;p&gt;Gemfile&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt; source &#39;https://rubygems.org&#39;

 # Specify your gem&#39;s dependencies in immutable_list.gemspec
 gemspec
+gem &amp;quot;rake-compiler&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rakefile&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt; require &amp;quot;bundler/gem_tasks&amp;quot;
+require &amp;quot;rake/extensiontask&amp;quot;
+
+Rake::ExtensionTask.new &amp;quot;immutable_list&amp;quot; do |ext|
+  ext.lib_dir = &amp;quot;lib/immutable_list&amp;quot;
+end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;immutable_list.gemspec&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;# coding: utf-8
 lib = File.expand_path(&#39;../lib&#39;, __FILE__)
 $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)
 require &#39;immutable_list/version&#39;

 Gem::Specification.new do |spec|
   spec.name          = &amp;quot;immutable_list&amp;quot;
   spec.version       = ImmutableList::VERSION
   spec.authors       = [&amp;quot;gam0022&amp;quot;]
   spec.email         = [&amp;quot;gam0022@gmail.com&amp;quot;]
-  spec.description   = %q{TODO: Write a gem description}
-  spec.summary       = %q{TODO: Write a gem summary}
+  spec.description   = %q{Immutable Linked List implemented in C-Extensions}
+  spec.summary       = %q{Immutable Linked List implemented in C-Extensions}
   spec.homepage      = &amp;quot;&amp;quot;
   spec.license       = &amp;quot;MIT&amp;quot;
+  spec.extensions    = %w[ext/immutable_list/extconf.rb]

   spec.files         = `git ls-files`.split($/)
   spec.executables   = spec.files.grep(%r{^bin/}) { |f| File.basename(f) }
   spec.test_files    = spec.files.grep(%r{^(test|spec|features)/})
   spec.require_paths = [&amp;quot;lib&amp;quot;]

   spec.add_development_dependency &amp;quot;bundler&amp;quot;, &amp;quot;~&amp;gt; 1.3&amp;quot;
   spec.add_development_dependency &amp;quot;rake&amp;quot;
 end
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ext&#34;&gt;ext/&lt;/h2&gt;

&lt;p&gt;C拡張のライブラリ本体は、&lt;code&gt;ext/&lt;/code&gt;に置きます。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ext/&lt;/code&gt; は無いので、新規で作ります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tree ext/
ext
└── immutable_list
    ├── extconf.rb
    └── immutable_list.c
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;immutable_list/immutable_list&lt;/code&gt;のようなファイル名の指定がテクニックなので注目してください。
&lt;code&gt;&amp;lt;gemname&amp;gt;/&amp;lt;gemname&amp;gt;&lt;/code&gt;にすることで、require をするときに名前が衝突することを防いでいます。&lt;/p&gt;

&lt;p&gt;ext/immutable_list/extconf.rb&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &amp;quot;mkmf&amp;quot;
create_makefile(&amp;quot;immutable_list/immutable_list&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ext/immutable_list/immutable_list.c&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;ruby.h&amp;gt;

#define true 1
#define false 0

VALUE cImmutableList;

struct immutable_list {
  VALUE value;
  VALUE next;
};

static void
immutable_list_mark(struct immutable_list *ptr)
{
  rb_gc_mark(ptr-&amp;gt;value);
  rb_gc_mark(ptr-&amp;gt;next);
}

// 長すぎるので以下略。気になる人は以下を参照
// https://github.com/gam0022/immutable_list/blob/master/ext/immutable_list/immutable_list.c
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;lib&#34;&gt;lib/&lt;/h2&gt;

&lt;p&gt;通常のgemであれば、&lt;code&gt;lib/immutable_list.rb&lt;/code&gt; に本体を実装しますが、
今回はC拡張で実装されたもの require するようにします。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tree lib/
lib
├── immutable_list
│   └── version.rb
└── immutable_list.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lib/immutable_list.rb&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt; require &amp;quot;immutable_list/version&amp;quot;
+require &amp;quot;immutable_list/immutable_list&amp;quot;

-module ImmutableList
+class ImmutableList
   # Your code goes here...
 end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;lib/immutable_list/version.rb&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;-module ImmutableList
+class ImmutableList
  VERSION = &amp;quot;0.0.1&amp;quot;
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rubygems-に登録&#34;&gt;RubyGems に登録&lt;/h2&gt;

&lt;p&gt;あとは、通常のgemと同じ要領で、RubyGems に公開するだけです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ gem build immutable_list.gemspec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GitHub に push&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ gem push pkg/immutable_list-0.0.1.gem&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>MacでRuby on Railsの開発環境を作るまで</title>
      <link>https://gam0022.net/blog/2012/07/27/getting-started-with-ruby-on-rails-on-mac/</link>
      <pubDate>Fri, 27 Jul 2012 06:34:00 +0900</pubDate>
      
      <guid>https://gam0022.net/blog/2012/07/27/getting-started-with-ruby-on-rails-on-mac/</guid>
      <description>

&lt;h2 id=&#34;macでruby-on-railsの開発環境を作るまで&#34;&gt;MacでRuby on Railsの開発環境を作るまで&lt;/h2&gt;

&lt;p&gt;先日、1世代前のMac Book Air 13インチモデルを入手しました。&lt;/p&gt;

&lt;p&gt;設定を弄りまくっている真っ最中ですが、
まずはMacでRuby on Railsの開発環境を作るまでをまとめます。&lt;/p&gt;

&lt;p&gt;今回の記事を一言でまとめると、「RAILSINSTALLERは神」です。&lt;/p&gt;

&lt;p&gt;おおまかな手順を説明すると、次のような感じです。&lt;/p&gt;

&lt;p&gt;せっかくなので、正解と失敗の２通りの方法を紹介します。&lt;/p&gt;

&lt;h3 id=&#34;失敗&#34;&gt;失敗&lt;/h3&gt;

&lt;p&gt;Xcode4.4経由でgccを入れると、LLVMベースのgccが入ってしまい、rvmでコケます。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;XcodeをAppStoreからインストールする。&lt;/li&gt;
&lt;li&gt;Xcode-&amp;gt; Preferences-&amp;gt; Downloads から、Command Line Tools をインストールする。&lt;/li&gt;
&lt;li&gt;(ここでなんとなくhomebrewをインストールする。)&lt;/li&gt;
&lt;li&gt;rvmを公式ページのように&lt;code&gt;$ curl -L https://get.rvm.io | bash -s stable --ruby&lt;/code&gt;とかでインストールする。&lt;/li&gt;
&lt;li&gt;rvmのインストールは完了するが、rubyのコンパイルに失敗する。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ rvm requirements&lt;/code&gt;をしたら、Xcodeを4.1にダウングレードするか、Xcodeをアンインストールして&lt;code&gt;osx-gcc-installer&lt;/code&gt;をインストールしろと言われる。&lt;/li&gt;
&lt;li&gt;Xcodeを入れなおすのも消すのもめんどくさい&lt;/li&gt;
&lt;li&gt;＼(&amp;#94;o&amp;#94;)／ｵﾜﾀ&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;正解&#34;&gt;正解&lt;/h3&gt;

&lt;p&gt;最初からRAILSINSTALLERを使っていれば、これだけで終了しました。Xcode4.4と共存もできます。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;RAILSINSTALLER でrvmをインストールする。&lt;/li&gt;
&lt;li&gt;rvmでrubyをインストールする。&lt;/li&gt;
&lt;li&gt;rvmで適当にgemsetを作って使う。&lt;/li&gt;
&lt;li&gt;3.で作ったgemsetに、gemでrailsを入れる。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;正解例を詳しく&#34;&gt;正解例を詳しく&lt;/h2&gt;

&lt;h3 id=&#34;railsinstaller-でrvmをインストールする&#34;&gt;RAILSINSTALLER でrvmをインストールする&lt;/h3&gt;

&lt;p&gt;リンクから&lt;a href=&#34;http://railsinstaller.org/#osx&#34;&gt;RailsInstaller&lt;/a&gt;をインストールします。&lt;/p&gt;

&lt;p&gt;GUIでとっても簡単にインストールできます。ゆとり仕様です。&lt;/p&gt;

&lt;p&gt;あまりちゃんと確認しませんでしたが、この段階で最新のRubyとRailsが入った環境になります。&lt;/p&gt;

&lt;p&gt;最新でないRubyやRailsが欲しいときは、次のような感じで作業すればいいと思います。&lt;/p&gt;

&lt;h3 id=&#34;rvmでrubyをインストールする&#34;&gt;rvmでrubyをインストールする&lt;/h3&gt;

&lt;p&gt;Ruby1.9.2が欲しければ、&lt;code&gt;$ rvm install 1.9.2&lt;/code&gt;をします。&lt;/p&gt;

&lt;p&gt;なんで1.9.2にしたか言うと、Octopressを使いたいからです。ご了承ください。&lt;/p&gt;

&lt;h4 id=&#34;rvmの超基本的な使い方&#34;&gt;rvmの超基本的な使い方&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;rvm list&lt;/code&gt;でインストールしたrubyの一覧を表示します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rvm list

rvm rubies

ruby-1.9.2-p320 [ x86_64 ]
=* ruby-1.9.3-p194 [ x86_64 ]

# =&amp;gt; - current
# =* - current &amp;amp;&amp;amp; default
#  * - default
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;rvm use [version]&lt;/code&gt;で指定したバージョンのRubyを使います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rvm use 1.9.2
Using /Users/gam0022/.rvm/gems/ruby-1.9.2-p320
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;rvmで適当にgemsetを作って使う&#34;&gt;rvmで適当にgemsetを作って使う&lt;/h3&gt;

&lt;p&gt;ここでは、rails3というgemsetを作って使います。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rvm gemset create rails3
rvm gemset use rails3 --default
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;作ったgemsetにgemでrailsをインストールする&#34;&gt;作ったgemsetにgemでrailsをインストールする&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$ gem install rails&lt;/code&gt;で最新のrails3がインストールできます。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;$ gem install rails -v 3.2.3&lt;/code&gt;のように、バージョンも指定できます。&lt;/p&gt;

&lt;p&gt;以上で、MacでRuby on Railsの開発環境ができました。めでたしめでたし。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-v&lt;/code&gt;オプションでバージョンを確認できます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ruby -v
ruby 1.9.2p320 (2012-04-20 revision 35421) [x86_64-darwin11.4.0]
$ rails -v
Rails 3.2.6
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
